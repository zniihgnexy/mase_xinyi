# basics
model = "vgg7"
dataset = "cifar10"
task = "cls"

max_epochs = 5
batch_size = 512
learning_rate = 1e-2
accelerator = "gpu"
project = "team_project"
seed = 42
log_every_n_steps = 5
# load_name = "/xinyi/mase_xinyi/mase_output/jsc-tiny_classification_jsc_2024-02-09/software/training_ckpts/best.ckpt"
# load_type = "pl"

[search.search_space]
name = "graph/software/zero_cost"

[search.search_space.setup]
by = "name"

[search.search_space.seed.default.config]
# the only choice "NA" is used to indicate that layers are not quantized by default
name = ["NA"]

### search config
[search.search_space.nas_zero_cost.config]
name = ['infer.tiny']
C = [16]
N = [5]
op_0_0 = [0]
op_1_0 = [0,1,2,3,4]
op_2_0 = [0,1,2,3,4]
op_2_1 = [0,1,2,3,4]
op_3_0 = [0,1,2,3,4]
op_3_1 = [0,1,2,3,4]
op_3_2 = [0,1,2,3,4]
number_classes = [10]

[search.strategy]
name = "optuna"
eval_mode = false

[search.sw_runner]
name = "zero_cost"

[search.strategy.sw_runner.zero_cost]
# metric can be chosen from 
# "fisher", "grad_norm", "grasp", "jacob_cov", 
# "l2_norm", "plain", "snip", "synflow"
metrics = ["grad_norm", "snip", "grasp", "fisher", "jacob_cov", "plain", "synflow", "l2_norm"]
data_loader = "val_dataloader"
num_samples = 512

[search.strategy.hw_runner.average_bitwidth]
compare_to = 32 # compare to FP32

[search.strategy.setup]
n_jobs = 1
n_trials = 10
timeout = 20000
sampler = "tpe"
# sum_scaled_metrics = true # single objective
# direction = "maximize"
sum_scaled_metrics = false # multi objective

[search.strategy.metrics]
grad_norm.scale = 1.0
grad_norm.direction = "maximize"
snip.scale = 1.0
snip.direction = "maximize"
grasp.scale = 1.0
grasp.direction = "maximize"
fisher.scale = 1.0
fisher.direction = "maximize"
jacob_cov.scale = 1.0
jacob_cov.direction = "maximize"
plain.scale = 1.0
plain.direction = "minimize"
synflow.scale = 1.0
synflow.direction = "minimize"
l2_norm.scale = 1.0
l2_norm.direction = "minimize"
# loss.scale = 1.0
# loss.direction = "minimize"
# accuracy.scale = 1.0
# accuracy.direction = "maximize"
average_bitwidth.scale = 0.2
average_bitwidth.direction = "minimize"